<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>